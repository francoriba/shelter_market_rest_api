name: QAWorkflow

on:
  workflow_dispatch:
  pull_request:
    types: [synchronize, opened, reopened, ready_for_review]

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_PORT: ${{ secrets.DB_PORT }}
      JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
            go-version: 1.21

      - name: Check environment variables
        run: |
          echo "Checking for environment variables:"
          for var in DB_HOST DB_USER DB_PASSWORD DB_NAME DB_PORT JWT_SECRET_KEY
          do
            if [ -n "${!var}" ]; then
              echo "$var is set"
            else
              echo "$var is not set"
            fi
          done

      - name: Build
        uses: ./.github/actions/build
        with:
          target-directory: './'

      - name: Tests
        uses: ./.github/actions/tests
  
  lint:
    # https://primegopher.medium.com/configure-the-golangci-lint-workflow-for-your-golang-applications-6e765f2146c5
    # https://golangci-lint.run/
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: '1.22'
          cache: false
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.56.0
          args: --timeout 3m 

  test-db-connection:
    runs-on: ubuntu-latest
    env:
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_PORT: ${{ secrets.DB_PORT }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.21

      - name: Check environment variables
        run: |
          echo "Checking for environment variables:"
          for var in DB_HOST DB_USER DB_PASSWORD DB_NAME DB_PORT
          do
            if [ -n "${!var}" ]; then
              echo "$var is set"
            else
              echo "$var is not set"
            fi
          done

      - name: Test Database Connection
        run: go run .github/scripts/test_db_connection.go

  test-jwt:
    runs-on: ubuntu-latest
    env:
      JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.21

      - name: Test JWT
        run: go run .github/scripts/test_jwt.go
